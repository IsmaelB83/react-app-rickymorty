{"version":3,"sources":["components/spinner.gif","components/Formulario.js","components/Paginador.js","components/Card.js","components/Personaje.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Formulario","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","status","species","gender","react_default","a","createElement","className","placeholder","onChange","formEventListener","bind","defaultValue","value","disabled","hidden","e","key","target","setState","defineProperty","onFilter","Component","Paginator","page","pages","onClick","CharacterCard","origin","last","image","src","alt","id","ta","ago","created","Characters","pageCompTop","React","createRef","pageCompBottom","formComp","loading","characters","Formulario_Formulario","ref","filterEventHandler","Paginador_Paginator","paginatorEventHandler","logo","length","map","ch","i","Card_CharacterCard","location","retrieveCharacters","path","url","URL","fetch","response","json","result","console","log","results","info","next","prev","searchParams","get","newPageStatus","current","changeStatus","_context","t0","_context2","filters","concat","Boolean","window","hostname","match","reactComp","Personaje_Characters","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5b23de1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.f0d26039.gif\";","// Node imports\nimport React, { Component } from 'react';\n// CSS imports\nimport './Formulario.css';\n\n\nexport default class Formulario extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      status: '',\n      species: '',\n      gender: ''\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"form-cards\">\n        <p>Criterios de filtrado</p>\n        <input name=\"name\" placeholder=\"filter by name...\" onChange={this.formEventListener.bind(this)}/>\n        <select name=\"status\" defaultValue=\"\" onChange={this.formEventListener.bind(this)}>\n          <option value=\"\" disabled hidden>filter by status...</option>\n          <option value=\"dead\">Dead</option>\n          <option value=\"alive\">Alive</option>\n          <option value=\"unknown\">Unknown</option>\n        </select>\n        <input name=\"species\" placeholder=\"filter by species...\" onChange={this.formEventListener.bind(this)}/>\n        <select name=\"gender\" defaultValue=\"\" onChange={this.formEventListener.bind(this)}>\n          <option value=\"\" disabled hidden>filter by gender...</option>\n          <option value=\"female\">Female</option>\n          <option value=\"male\">Male</option>\n          <option value=\"genderless\">Genderless</option>\n          <option value=\"unknown\">Unknown</option>\n        </select>\n      </div>\n    );\n  }\n\n  async formEventListener(e) {\n    let key = e.target.name;\n    let value = e.target.value;\n    await this.setState({ [key]: value });    \n    this.props.onFilter();\n  }\n}","// Node imports\nimport React, { Component } from 'react';\n// CSS imports\nimport './Paginador.css';\n\nexport default class Paginator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: this.props.page,\n      pages: this.props.pages,\n    }\n  }\n  \n  render() {\n      return (\n            <div className=\"card-container-footer\">\n              <button name=\"prev\" onClick={this.props.onClick}>Anterior</button>\n              <h3>Pagina {this.state.page} de {this.state.pages}</h3>\n              <button name=\"next\" onClick={this.props.onClick}>Siguiente</button>\n            </div>\n      );\n  }\n\n  changeStatus(status) {\n    this.setState(status);\n  }\n}","// Node imports\nimport React, { Component } from 'react';\nimport ta from 'time-ago';\n// CSS imports\nimport './Card.css';\n\n\nexport default class CharacterCard extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = { \n      status: this.props.status,\n      species : this.props.species,\n      gender: this.props.gender,\n      origin: this.props.origin,\n      last: this.props.last,\n      image: this.props.image\n    };\n  }\n  \n  componentWillMount() {\n  }\n  \n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <img src={this.state.image} alt=\"character\"></img>\n          <div className=\"card-title\">\n            <h1>{this.props.name}</h1>\n            <p><span>id: {this.props.id}</span> - <span>{ta.ago(this.props.created)}</span></p>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <p><span>Status</span><span>{this.state.status}</span></p>\n          <p><span>Species</span><span>{this.state.species}</span></p>\n          <p><span>Gender</span><span>{this.state.gender}</span></p>\n          <p><span>Origin</span><span>{this.state.origin}</span></p>\n          <p><span>Last Location</span><span>{this.state.last}</span></p>\n        </div>\n      </div>\n    );\n  }\n}","// Node imports\nimport React, { Component } from 'react';\n// Own imports\nimport Formulario from './Formulario';\nimport Paginador from './Paginador';\nimport Card from './Card';\n// CSS imports\nimport './Personaje.css';\n// Assets imports\nimport logo from './spinner.gif';\n\nexport default class Characters extends Component {\n    constructor(props) {\n      super(props);\n      this.pageCompTop = React.createRef();\n      this.pageCompBottom = React.createRef();\n      this.formComp = React.createRef();\n      this.state = { \n        loading: true,\n        characters: []\n      }\n    }\n    \n    componentWillMount() {\n    }\n    \n    render() {\n      return (\n          <div>\n            <Formulario ref={this.formComp} onFilter={this.filterEventHandler.bind(this)}/>\n            <Paginador ref={this.pageCompTop} page={this.state.page} pages={this.state.pages} onClick={this.paginatorEventHandler.bind(this)}/>\n              <div className=\"card-container\">\n              { this.state.loading && \n                  <div className=\"card-container\">\n                    <div>\n                      <img src={logo} alt=\"loading...\" />\n                      <h2>Loading data...</h2>\n                    </div>\n                  </div>\n              }\n              { !this.state.loading && this.state.characters.length > 0 && this.state.characters.map( (ch, i) => \n                  <Card key={ch.id} id={ch.id} name={ch.name} status={ch.status} created={ch.created} \n                                    image={ch.image} species={ch.species} gender={ch.gender} origin={ch.origin.name}\n                                    last={ch.location.name}/>)\n              }\n              { !this.state.loading && this.state.characters.length === 0 && \n                  <h1>No hay resultados para los filtros indicados</h1>\n              }\n            </div>\n            <Paginador ref={this.pageCompBottom} page={this.state.page} pages={this.state.pages} onClick={this.paginatorEventHandler.bind(this)}/>\n          </div>\n      );\n    }\n  \n    componentDidMount() {\n      this.retrieveCharacters('https://rickandmortyapi.com/api/character/');\n    }\n   \n    async retrieveCharacters(path) {\n      try {\n          // Consume API\n          let url = new URL(path), result;\n          let response = await fetch(url);   \n          if (response.status === 200) {\n            result = await response.json();\n          } else {\n            console.log('404');\n            result = {\n              results: [],\n              info: { next: '',\n                      prev: '',\n                      page: \"1\",\n                      pages: \"1\",\n              }\n            }\n          }\n          // Update current state\n          this.setState( \n            { characters: result.results,\n              loading: false,\n              next: result.info.next,\n              prev: result.info.prev,\n              page: url.searchParams.get(\"page\") ? url.searchParams.get(\"page\") : \"1\",\n              pages: result.info.pages\n            } \n          );\n          // Update paginator\n          let newPageStatus = { page: this.state.page, pages: this.state.pages }\n          this.pageCompTop.current.changeStatus(newPageStatus);\n          this.pageCompBottom.current.changeStatus(newPageStatus);\n      } catch (error) {\n          console.log(error);\n      }\n    }  \n\n    async paginatorEventHandler(e) {\n      try {\n        let url;\n        url = e.target.name===\"next\" ? this.state.next : this.state.prev;\n        if (url !== '') {\n          await this.retrieveCharacters(url);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    async filterEventHandler() {\n      this.setState({loading: true});\n      let url = 'https://rickandmortyapi.com/api/character/?';\n      let filters = this.formComp.current.state;\n      if (filters.name !== '') url += `name=${filters.name}`;\n      if (filters.status !== '') url += `&status=${filters.status}`;\n      if (filters.species !== '') url += `&species=${filters.species}`;\n      if (filters.gender !== '') url += `&gender=${filters.gender}`;\n      await this.retrieveCharacters(url);\n    }\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/Personaje';\nimport * as serviceWorker from './serviceWorker';\n\n// Crear react\nlet reactComp = <App/>\nReactDOM.render(reactComp, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}